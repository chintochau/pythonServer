from flask import Flask, request
from faster_whisper import WhisperModel
import time
import os
import uuid
from progress.bar import Bar
from moviepy.editor import  AudioFileClip

app = Flask(__name__)

model_size = "large-v2"
model = WhisperModel(model_size, device="cuda", compute_type="float16",download_root=".")

def format_srt_time(start_time):
    seconds = int(start_time % 60)
    total_minutes = int(start_time // 60)
    minutes = total_minutes % 60
    hours = int(total_minutes // 60)
    milliseconds = int((start_time - int(start_time)) * 1000)
    formatted_time = "%02d:%02d:%02d,%03d" % (hours, minutes, seconds, milliseconds)
    return formatted_time

@app.route('/transcribe', methods=['POST'])
def transcribe():
    # generate a fake SRT async output in 2 seconds
    time.sleep(5)
    print("Fake SRT output generated")
    output = "1\n00:00:00,000 --> 00:00:02,000\nHello, welcome to the Whisper AI coding challenge!\n\n2\n00:00:02,000 --> 00:00:04,000\nThis is a fake SRT output generated by the fake server.\n\n3\n00:00:04,000 --> 00:00:06,000\nThe fake server is running on port 5000.\n\n4\n00:00:06,000 --> 00:00:08,000\nThis is the last subtitle in the fake SRT output.\n\n"
    return output


@app.route('/', methods=['GET'])
def check_transcription_status():
    # Implement the logic to check the status of the transcription process
    # Example: return a message indicating that the service is running
    return "Transcription service is running"


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
